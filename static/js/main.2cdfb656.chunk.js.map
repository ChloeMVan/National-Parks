{"version":3,"sources":["components/Button.js","Pages/Home.js","components/ActivityLinks.js","Pages/ActivityPage.js","components/ParkCamLinks.js","components/LiveParkList.js","components/ParkInformation.js","components/Activity.js","components/ParkPageCamLink.js","Pages/ParkCamPage.js","components/GetParkCam.js","components/ErrorPage.js","App.js","components/Header.js","components/Footer.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Home","to","console","log","ActivityLinks","props","id","name","ActivityPage","useState","error","setError","isLoaded","setIsLoaded","items","setState","useEffect","fetch","process","then","res","json","result","temp","i","data","length","newActivity","window","location","href","map","item","ParkCamLinks","parkCode","fullName","LiveParkList","start","setStart","url","newPark","scrollTo","top","behavior","ParkInformation","parkUrl","Activity","path","idAndName","pathSplit","split","nameSplit","nameConnect","breakPath","useLocation","pathname","parks","ParkPageCamLink","title","ParkCamPage","undefined","images","description","image","src","alt","altText","GetParkCam","newParkCam","Error","App","element","ErrorPage","Header","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cdfb656.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Button.css\";\r\n\r\nconst STYLES = [\r\n    \"btn--outline\",\r\n    \"btn--solid\",\r\n    \"btn--link\",\r\n    \"btn--link--clicked\",\r\n    \"btn--title\",\r\n    \"btn--outline--white\"\r\n]\r\n\r\nconst SIZES = [\r\n    \"btn--medium\",\r\n    \"btn--large\",\r\n    \"btn--link--size\",\r\n    \"btn--title-size\"\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n}) => {\r\n\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return (\r\n        <>\r\n            <button className = {`btn ${checkButtonStyle} ${checkButtonSize}`}onClick={onClick} type={type}>\r\n                {children}\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from '../components/Button';\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className = 'home'> \r\n        <nav>\r\n            <Link to=\"/activity\">\r\n                <Button onClick={() => { console.log(\"Clicked\") }}\r\n                    type=\"button\"\r\n                    buttonSize=\"btn--large\"\r\n                    buttonStyle=\"btn--outline--white\"\r\n                >Find Activities</Button>\r\n            </Link>\r\n            <Link to=\"/parkList\">\r\n                <Button onClick={() => { console.log(\"Clicked\") }}\r\n                    type=\"button\"\r\n                    buttonSize=\"btn--large\"\r\n                    buttonStyle=\"btn--outline--white\"\r\n                >Park Webcams</Button>\r\n            </Link>\r\n        </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from '../components/Button';\r\n\r\nconst ActivityLinks = (props) => {\r\n    return (\r\n        <nav>\r\n            <Link to={'/activity/' + props.id + '/' + props.name}>\r\n                <Button onClick={console.log(\"Clicked\")}\r\n                    type=\"button\"\r\n                    buttonSize=\"btn--link--size\"\r\n                    buttonStyle=\"btn--solid\"\r\n                >{props.name}</Button>\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default ActivityLinks\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport ActivityLinks from '../components/ActivityLinks.js';\r\nimport './ActivityPage.css';\r\n\r\nexport default function ActivityPage() {\r\n\r\n    //grabs a list of possible activites and their IDs\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://developer.nps.gov/api/v1/activities?limit=200&api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setIsLoaded(true);\r\n                    const temp = [];\r\n                    for (var i = 0; i < result.data.length; i++) {\r\n                        const newActivity = { id: result.data[i].id, name: result.data[i].name }\r\n                        temp[i] = newActivity\r\n                    }\r\n                    setState(temp);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(true);\r\n                }\r\n            )\r\n    }, [])\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                {window.location.href = '/404'}\r\n            </div>\r\n        )\r\n    }\r\n    else if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    }\r\n    //sends the list to ActivityLinks to populate links to parks associated with that activity\r\n    return (\r\n        <div className = 'links'>\r\n            {console.log(items)}\r\n            {items.map((item) => (\r\n                <ActivityLinks name = { item.name } id = {item.id}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from '../components/Button';\r\n\r\nconst ParkCamLinks = (props) => {\r\n    return (\r\n        <nav>\r\n            <Link to={'/parkList/' + props.parkCode + '/' + props.fullName}>\r\n                <Button onClick={console.log(\"Clicked\")}\r\n                    type=\"button\"\r\n                    buttonSize=\"btn--link--size\"\r\n                    buttonStyle=\"btn--link\"\r\n                >{props.fullName}</Button>\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\nexport default ParkCamLinks\r\n","import React, { useState, useEffect } from 'react'\r\nimport ParkCamLinks from './ParkCamLinks.js';\r\nimport { Button } from './Button';\r\nimport './LiveParkList.css'\r\n\r\nexport default function LiveParkList(props) {\r\n\r\n    //start is used to keep track of which parks are being rendered\r\n    // intially the first 200 and then changed according to the Prev and Next Buttons\r\n    const [start, setStart] = useState(0)\r\n    const decrement = () => {\r\n        if (start > 0) {\r\n            setStart(start - 100)\r\n        }\r\n    }\r\n    const increment = () => {\r\n        if (start < 400) {\r\n            setStart(start + 100)\r\n        }\r\n    }\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setState] = useState([]);\r\n    var url = `https://developer.nps.gov/api/v1/parks?limit=100&start=` + start + `&api_key=${process.env.REACT_APP_API_KEY}`\r\n    console.log(url)\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    const temp = [];\r\n                    for (var i = 0; i < result.data.length; i++) {\r\n                        const newPark = { fullName: result.data[i].fullName, parkCode: result.data[i].parkCode }\r\n                        temp[i] = newPark\r\n                    }\r\n                    setState(temp);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(true);\r\n                }\r\n            )\r\n    }, [url]);\r\n\r\n    if (error) {\r\n        return <div> Error: There is a problem</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    }\r\n    else {\r\n        //sends list of parks to ParkCamLinks to populate links \r\n        return (\r\n            <div className='page'>\r\n                {items.map((item) => (\r\n                    <ParkCamLinks fullName={item.fullName} parkCode={item.parkCode} />\r\n                ))}\r\n                <div className='buttons'>\r\n\r\n                    <Button onClick={(\r\n                    ) => { decrement() }}\r\n                        type=\"button\"\r\n                        buttonSize=\"btn--small\"\r\n                        buttonStyle=\"btn--outline\"\r\n                    >Prev</Button>\r\n\r\n                    <Button onClick={() => { increment() }}\r\n                        type=\"button\"\r\n                        buttonSize=\"btn--small\"\r\n                        buttonStyle=\"btn--outline\"\r\n                    >Next</Button>\r\n\r\n                    <div className='backtToTop'>\r\n                        <Button onClick={() => {\r\n                            window.scrollTo({\r\n                                top: 0,\r\n                                behavior: \"smooth\"\r\n                              });\r\n                        }}\r\n                            type=\"button\"\r\n                            buttonSize=\"btn--small\"\r\n                            buttonStyle=\"btn--outline\"\r\n                        >Back To The Top</Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button } from '../components/Button';\r\n\r\nconst ParkInformation = (props) => {\r\n    return (\r\n        <div>\r\n            <Button onClick={function() {window.location.href = props.parkUrl} }\r\n                type=\"button\"\r\n                buttonSize=\"btn--link--size\"\r\n                buttonStyle=\"btn--link\"\r\n            >{props.fullName}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParkInformation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport ParkInformation from './ParkInformation';\r\nimport './Activity.css';\r\n\r\nconst Activity = () => {\r\n    //breaks up the location to get the name and id of the activity\r\n    const location = useLocation();\r\n    const breakPath = (path) => {\r\n        const idAndName = [];\r\n        var pathSplit = path.split('/')\r\n        if (pathSplit.length > 3) {\r\n            var nameSplit = pathSplit[3].split('%20')\r\n            var nameConnect = \"\";\r\n            for (var i = 0; i < nameSplit.length; i++) {\r\n                nameConnect = nameConnect + nameSplit[i] + \" \"\r\n            }\r\n            idAndName[0] = pathSplit[2]\r\n            idAndName[1] = nameConnect\r\n            return idAndName\r\n        }\r\n        else {\r\n            window.location.href = '/404'\r\n        }\r\n    }\r\n    var data = breakPath(location.pathname)\r\n\r\n    //using the id, this gets all the parks(and their needed data) associated with that id\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setState] = useState([]);\r\n    var url = `https://developer.nps.gov/api/v1/activities/parks?id=` + data[0] + `&api_key=${process.env.REACT_APP_API_KEY}`\r\n    console.log(url)\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    const temp = [];\r\n                    for (var i = 0; i < result.data[0].parks.length; i++) {\r\n                        const newPark = {\r\n                            fullName: result.data[0].parks[i].fullName, parkCode: result.data[0].parks[i].parkCode,\r\n                            parkUrl: result.data[0].parks[i].url\r\n                        }\r\n                        temp[i] = newPark\r\n                    }\r\n                    setState(temp);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(true);\r\n                }\r\n            )\r\n    }, [url]);\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                {window.location.href = '/404'};\r\n                Error: {\"There was a problem\"};\r\n            </div>\r\n        )\r\n    }\r\n    else if (!isLoaded) {\r\n        return (\r\n            <div>\r\n                <h1>Loading...</h1>\r\n            </div>\r\n        )\r\n    }\r\n    //sends list of parks to ParkInformation to populate links \r\n    return (\r\n        <div className='activity'>\r\n            <h1>{data[1]}</h1>\r\n            <div className='container'>\r\n                {items.map((item) => (\r\n                    <ParkInformation fullName={item.fullName} parkCode={item.parkCode} parkUrl={item.parkUrl} />\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Activity\r\n","import React from 'react'\r\nimport { Button } from './Button';\r\nimport './ParkPageCamLink.css'\r\n\r\nconst ParkPageCamLink = (props) => {\r\n    return (\r\n        <div className = 'link'>\r\n            <Button onClick={function() {window.location.href = props.url} }\r\n                type=\"button\"\r\n                buttonSize=\"btn--link--size\"\r\n                buttonStyle=\"btn--link\"\r\n            >{props.title} Web Cam</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParkPageCamLink","import React from 'react'\r\nimport ParkPageCamLink from '../components/ParkPageCamLink';\r\nimport \"./ParkCamPage.css\";\r\n\r\nconst ParkCamPage = (props) => {\r\n    //no web cam associated with park\r\n    if (props.title === undefined) {\r\n        return (\r\n            <div className='noCams'>\r\n                <h1>No Webcams Available</h1>\r\n            </div>\r\n        )\r\n    }\r\n    //park has a webcame but doesn't have images\r\n    //ParkPageCamLink is used to set up a link to actual webcam on website\r\n    else if (props.images.length === 0) {\r\n        return (\r\n            <div className='hasNoImages'>\r\n                <h1>{props.title}</h1>\r\n                <h>No Available Photos</h>\r\n                <div className='text'>\r\n                    <p>{props.description}</p>\r\n                    <ParkPageCamLink url ={props.url} title = {props.title}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        //park ahs a webcam and images\r\n        return (\r\n            <div className='hasImage'>\r\n                <h1>{props.title}</h1>\r\n                {console.log(props.images)}\r\n                {props.images.map((image) => (\r\n                    <img src={image.url} alt={image.altText}></img>\r\n                ))}\r\n                <div className='text'>\r\n                    <p>{props.description}</p>\r\n                    <ParkPageCamLink url ={props.url} title = {props.title}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ParkCamPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport ParkCamPage from '../Pages/ParkCamPage';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function GetParkCam() {\r\n    //breaks up the location to get the name and code for this park\r\n    const location = useLocation();\r\n    const breakPath = (path) => {\r\n        const idAndName = [];\r\n        var pathSplit = path.split('/')\r\n        if (pathSplit.length >=4) {\r\n            var nameSplit = pathSplit[3].split('%20')\r\n            var nameConnect = \"\";\r\n            for (var i = 0; i < nameSplit.length; i++) {\r\n                nameConnect = nameConnect + nameSplit[i] + \" \"\r\n            }\r\n            idAndName[0] = pathSplit[2]\r\n            idAndName[1] = nameConnect\r\n            return idAndName\r\n        }\r\n        else {\r\n            window.location.href = '/404'\r\n        }\r\n    }\r\n    var data = breakPath(location.pathname)\r\n\r\n    //using the parkCode, this grabs the webcam information associated with this park\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setState] = useState([]);\r\n    var url = `https://developer.nps.gov/api/v1/webcams?parkCode=` + data[0] + `&api_key=${process.env.REACT_APP_API_KEY}`\r\n    console.log(url)\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    setIsLoaded(true);\r\n                    const temp = [];\r\n                    for (var i = 0; i < result.data.length; i++) {\r\n                        const newParkCam = { title: result.data[i].title, description: result.data[i].description, \r\n                            images: result.data[i].images, url: result.data[i].url }\r\n                        temp[i] = newParkCam\r\n                    }\r\n                    setState(temp);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(true);\r\n                }\r\n            )\r\n    }, [url]);\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                {window.location.href = '/404'};\r\n                Error: {\"There was a problem\"};\r\n            </div>\r\n        )\r\n    }\r\n    else if (!isLoaded) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if(items.length === 0){\r\n        return(<ParkCamPage />)\r\n    }\r\n    //sends list of park webcams to ParkCamPage to create a page\r\n    //showing data associated with the webcams\r\n    return (\r\n        <div>\r\n            {items.map((item) => (\r\n                <ParkCamPage title = {item.title} description = {item.description} \r\n                images = {item.images} url = {item.url} fullName = {data[1]}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n            <h1>There was a problem</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Pages/Home';\nimport {\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ActivityPage from \"./Pages/ActivityPage\";\nimport LiveParkList from \"./components/LiveParkList\";\nimport Activity from './components/Activity';\nimport GetParkCam from './components/GetParkCam';\nimport ErrorPage from './components/ErrorPage';\n\n\nexport default function App() {\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/activity\" element={<ActivityPage />} />\n      <Route path=\"/activity/:id/:name\" element={<Activity />} />\n      <Route path=\"/parkList\" element={<LiveParkList />} />\n      <Route path=\"/parkList/:parkCode/:fullName\" element={<GetParkCam />} />\n      <Route path=\"*\" element={<ErrorPage />} />\n    </Routes>\n  );\n}\n\n\n","import React from 'react'\r\nimport './Header.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from '../components/Button';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className = 'header'>\r\n            <Link to=\"/\">\r\n                <Button onClick={() => {console.log(\"Clicked\") }}\r\n                    type=\"button\"\r\n                    buttonSize=\"btn--title-size\"\r\n                    buttonStyle=\"btn--title\"\r\n                >National Prks</Button>\r\n            </Link>  \r\n            <p1>Discover Something New!</p1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = 'footer'>\r\n           <p1>Designed by Chloe Vancaemelbecke</p1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport Header from './components/Header'\nimport Footer from './components/Footer';\n\nReactDOM.render(\n  <HashRouter>\n   <Header />\n    <App />\n    <Footer />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}